  Books / Authors (Shell) Assignment
  
  
        -- Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby  
  
In [2]: from books_authors_app.models import *
In [3]: csharp = Book.objects.create(title="C Sharp")
In [4]: java = Book.objects.create(title="Java")
In [5]: python = Book.objects.create(title="Python")
In [6]: php = Book.objects.create(title="PHP")
In [7]: ruby = Book.objects.create(title="Ruby")
In [8]: print(Book.objects.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>]>
  
        -- Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevksy, William Shakespeare, Lau Tzu  
  
In [9]: jane = Author.objects.create(first_name="Jane", last_name="Austen")
In [10]: emily = Author.objects.create(first_name="Emily", last_name="Dickinson")
In [11]: fyodor = Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")
In [12]: william = Author.objects.create(first_name="William", last_name="Shakespeare")
In [13]: lau = Author.objects.create(first_name="Lau", last_name="Tzu")
  
        -- Add a new text field in the authors table called 'notes'.  
In [14]: exit()
        -- Create and run the migration files to update the table in your database.  
>>> python manage.py makemigrations
>>> python manage.py migrate
>>> python manage.py shell
In [1]: from books_authors_app.models import *

        -- Query: Change the name of the C Sharp book to C#  
  
In [2]: csharp = Book.objects.get(title = "C Sharp")
In [3]: csharp.title = "C#"
In [4]: print(csharp.title)
    C#
In [5]: csharp.save()
  
        -- Query: Change the first name of the 4th author to Bill  
  
In [6]: chg_to_bill = Author.objects.get(id=4)
In [7]: print(chg_to_bill.first_name)
    William
In [8]: chg_to_bill.first_name = "Bill"
In [9]: chg_to_bill.save()
In [10]: print(chg_to_bill.first_name)
    Bill
  
        -- Query: Assign the first author to the first 2 books  
  
In [18]: author1 = Author.objects.get(id=1)
In [19]: book1 = Book.objects.get(id=1)
In [20]: book2 = Book.objects.get(id=2)
In [21]: author1.books.add(book1)
In [22]: author1.books.add(book2)
In [24]: print(author1.books.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>]>

        -- Query: Assign the second author to the first 3 books  
  
In [25]: author2 = Author.objects.get(id=2)
In [26]: author2.books.add(book1, book2, Book.objects.get(id=3))
In [27]: print(author2.books.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>]>
  
        -- Query: Assign the third author to the first 4 books  
  
In [28]: author3 = Author.objects.get(id=3)
In [29]: author3.books.add(book1, book2, Book.objects.get(id=3), Book.objects.get(id=4))
In [30]: print(author3.books.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
  
        -- Query: Assign the fourth author to the first 5 books (or in other words, all the books)  
  
In [31]: author4 = Author.objects.get(id=4)
In [33]: author4.books.add(book1, book2, Book.objects.get(id=3), Book.objects.get(id=4), Book.objects.get(id=5))
In [34]: print(author4.books.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>]>
  
        -- Query: Retrieve all the authors for the 3rd book  
  
In [35]: book3 = Book.objects.get(id=3)
In [36]: print(book3.authors.all())
    <QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>
In [39]: for author in book3.authors.all():
    ...:     print(author.first_name, author.last_name)
    ...: 
    Emily Dickinson
    Fyodor Dostoevsky
    Bill Shakespeare
  
        -- Query: Remove the first author of the 3rd book  
  
In [40]: remove_this = book3.authors.first()
In [41]: print(remove_this.first_name)
    Emily
In [42]: book3.authors.remove(remove_this)
In [43]: for author in book3.authors.all():
    ...:     print(author.first_name, author.last_name)
    ...: 
    Fyodor Dostoevsky
    Bill Shakespeare
  
        -- Query: Add the 5th author as one of the authors of the 2nd book  
  
In [44]: author5 = Author.objects.get(id=5)
In [45]: book2.authors.add(author5)
In [46]: for author in book2.authors.all():
    ...:     print(author.first_name, author.last_name)
    ...: 
    Jane Austen
    Emily Dickinson
    Fyodor Dostoevsky
    Bill Shakespeare
    Lau Tzu
  
        -- Query: Find all the books that the 3rd author is part of  
  
In [47]: print(author3.books.all())
    <QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
In [48]: for book in author3.books.all():
    ...:     print(book.title)
    ...: 
    C#
    Java
    Python
    PHP 
  
        -- Query: Find all the authors that contributed to the 5th book

In [49]: book5 = Book.objects.get(id=5)
In [50]: print(book5.authors.all())
    <QuerySet [<Author: Author object (4)>]>
In [51]: for author in book5.authors.all():
    ...:     print(author.first_name, author.last_name)
    ...: 
    Bill Shakespeare